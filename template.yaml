AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 3

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - staging
      - prod
    Description: Environment of this stack of resources
  
  PaymentDBTableStreamARN:
    Description: My SSM Value
    Type: AWS::SSM::Parameter::Value<String>
    Default: PaymentDBTableStreamARN

Mappings:
  ResourcesName:
    dev:
      tableName: OfferDev
      tableNameArn: OfferDevArn
      paymentArn: PaymentDevArn
      arn: UserPoolArnDev
    staging:
      tableName: OfferStaging
      tableNameArn: OfferStagingArn
      paymentArn: PaymentStagingArn
      arn: UserPoolArnStaging
    prod:
      tableName: OfferProd
      tableNameArn: OfferProdArn
      paymentArn: PaymentProdArn
      arn: UserPoolArnProd

Resources:
  OfferApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Environment
      TracingEnabled: true
      Cors: "'*'"
      Auth:
        DefaultAuthorizer: MyCognitoAuthorizer
        Authorizers:
          MyCognitoAuthorizer:
            UserPoolArn: 
              Fn::ImportValue: !FindInMap [ResourcesName, !Ref Environment, arn]

  Offer:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.offerHandler
      Runtime: nodejs12.x
      CodeUri: offer/
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !FindInMap [ResourcesName, !Ref Environment, tableName]
      Environment:
        Variables:
          TABLE_NAME: !FindInMap [ResourcesName, !Ref Environment, tableName]
      Events:
        CreateOfferAPI:
          Type: Api
          Properties:
            Path: /offer
            Method: POST
            RestApiId: !Ref OfferApi
        UpdateOfferAPI:
          Type: Api
          Properties:
            Path: /offer/{offerId}
            Method: ANY
            RestApiId: !Ref OfferApi
  
  AddOffer:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: app.addOffer
      Runtime: nodejs12.x
      CodeUri: offer/
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !FindInMap [ResourcesName, !Ref Environment, tableName]
      Environment:
        Variables:
          TABLE_NAME: !FindInMap [ResourcesName, !Ref Environment, tableName]
      Events:
        Stream:
          Type: DynamoDB
          Properties:
            Stream:               
              Fn::ImportValue: !FindInMap [ResourcesName, !Ref Environment, paymentArn]
            BatchSize: 1
            StartingPosition: LATEST
  
  OfferTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !FindInMap [ResourcesName, !Ref Environment, tableName]
      AttributeDefinitions:
        - AttributeName: offerId
          AttributeType: S
      KeySchema:
        - AttributeName: offerId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      StreamSpecification:
          StreamViewType: NEW_IMAGE

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  OfferApi:
    Description: "API Gateway endpoint URL for ${Environment} stage for Offer Trip function"
    Value: !Sub "https://${OfferApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/offer/"
  Offer:
    Description: "Offer Trip Lambda Function ARN"
    Value: !GetAtt Offer.Arn
  OfferTableStream:
    Description: "Booking Trip Dynamo DB Table Stream"
    Value: !GetAtt OfferTable.StreamArn
    Export: 
      Name: !FindInMap [ResourcesName, !Ref Environment, tableNameArn]
  OfferIamRole:
    Description: "Implicit IAM Role created for Offer Trip function"
    Value: !GetAtt OfferRole.Arn
